Policies and permissions in IAM


You manage access in AWS by creating policies and attaching them to IAM identities (users, groups of users, or roles) or AWS resources. A policy is an object in AWS that, when associated with an identity or resource, defines their permissions. AWS evaluates these policies when an IAM principal (user or role) makes a request. Permissions in the policies determine whether the request is allowed or denied. Most policies are stored in AWS as JSON documents. AWS supports six types of policies: identity-based policies, resource-based policies, permissions boundaries, Organizations SCPs, ACLs, and session policies.

IAM policies define permissions for an action regardless of the method that you use to perform the operation. For example, if a policy allows the GetUser action, then a user with that policy can get user information from the AWS Management Console, the AWS CLI, or the AWS API. When you create an IAM user, you can choose to allow console or programmatic access. If console access is allowed, the IAM user can sign in to the console using a user name and password.


IAM JSON policy elements:

Version – Specify the version of the policy language that you want to use. As a best practice, use the latest 2012-10-17 version.

Statement – Use this main policy element as a container for the following elements. You can include more than one statement in a policy.

Sid (Optional) – Include an optional statement ID to differentiate between your statements.

Effect – Use Allow or Deny to indicate whether the policy allows or denies access.

Principal (Required in only some circumstances) – If you create a resource-based policy, you must indicate the account, user, role, or federated user to which you would like to allow or deny access. If you are creating an IAM permissions policy to attach to a user or role, you cannot include this element. The principal is implied as that user or role.

Action – Include a list of actions that the policy allows or denies.

Resource (Required in only some circumstances) – If you create an IAM permissions policy, you must specify a list of resources to which the actions apply. If you create a resource-based policy, this element is optional. If you do not include this element, then the resource to which the action applies is the resource to which the policy is attached.

Condition (Optional) – Specify the circumstances under which the policy grants permission.


Here is a policy where i have one iam role and i gave write access for datasync service using this policy.

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",                                        #optional
            "Effect": "Allow",
            "Action": [
                "datasync:CreateLocationS3",
                "datasync:CreateTask",
                "datasync:DeleteTask",
                "datasync:UpdateAgent",
                "datasync:DeleteLocation",
                "datasync:TagResource",
                "datasync:CreateLocationObjectStorage",
                "datasync:CreateLocationNfs",
                "datasync:StartTaskExecution",
                "datasync:CreateLocationFsxWindows",
                "datasync:UntagResource",
                "datasync:DeleteAgent",
                "datasync:CreateLocationEfs",
                "datasync:UpdateTask",
                "datasync:CreateAgent",
                "datasync:CreateLocationSmb",
                "datasync:CancelTaskExecution"
            ],
            "Resource": "*"
        },
        {
            "Sid": "VisualEditor1",                                         #optional
            "Effect": "Allow",
            "Action": "iam:PassRole",
            "Resource": "arn:aws:iam::221590973767:role/dev",
            "Condition": {
                "StringEqualsIfExists": {
                    "iam:PassedToService": "datasync.amazonaws.com"
                }
            }
        }
    ]
}
